插入排序(InsertSort)：java
时间复杂度：z最好：O(n) 最坏：O(n^2)
package InsertSort;
public class InsertSort {
	public void sort(int []a){
		for(int j=1;j<a.length;j++){
			int key=a[j];
			int i=j-1;
			while(i>=0&&a[i]>key){
				a[i+1]=a[i];
				i--;
			}
			a[i+1]=key;			
		}
	}
	public static void main(String[] args) {
		InsertSort s=new InsertSort();
		int[] a={2,3,5,6,1,3,2,7,9,3};
		s.sort(a);
		for(int i=0;i<a.length;i++){
			System.out.print(a[i]+" ");
		}
	}
}


选择排序(Selection Sort):java
时间复杂度： 最好=最坏： O(n^2)
public class SelectionSort {
	public static void sort(int[] a){
		int smallest;
		for(int i=0;i<a.length;i++){
			smallest=a[i];
			int position=i;
			for(int j=i+1;j<a.length;j++){
				if(a[j]<smallest){
					smallest=a[j];
					position =j;
				}
					
				
			}
			a[position]=a[i];
			a[i]=smallest;
		}
	}
	public static void main(String[] args) {
		int[] a={5,4,3,2,1};
		sort(a);
		for(int temp:a){
			System.out.print(temp+" ");
		}
	}
}
